package com.worst.lru;

public class DLL<K, V> {

    private Entry<K, V> startNode;
    private Entry<K, V> endNode;

    public Entry getStartNode() {
        return startNode;
    }

    public void setStartNode(Entry startNode) {
        this.startNode = startNode;
    }

    public Entry getEndNode() {
        return endNode;
    }

    public void setEndNode(Entry endNode) {
        this.endNode = endNode;
    }

    DLL() {
        startNode = null;
        endNode = null;
    }

    public void addToFront(Entry<K, V> node) {
        node.setRight(startNode);
        node.setLeft(null);

        if (startNode != null) {
            startNode.setLeft(node);
        }
        startNode = node;
        if (endNode == null) {
            endNode = startNode;
        }
    }

    private void removeNode(Entry<K, V> node) {

        if (node.getLeft() != null) {
            node.getLeft().setRight(node.getRight());
        } else {
            startNode = node.getRight();
        }

        if (node.getRight() != null) {
            node.getRight().setLeft(node.getLeft());
        } else {
            endNode = node.getLeft();
        }
    }

    public void moveToFront(Entry<K, V> node) {
        removeNode(node);
        addToFront(node);
    }
}
